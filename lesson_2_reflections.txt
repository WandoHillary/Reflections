What happens when you initialize a repository? Why do you need to do it?

When you initialize a repository the git subdirectory is created in the repository. This is needed so as to keep track of the files in the repository in case they one needs to commit any or all of them.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is different from the working directory and repository in that it is a temporary directory for holding files before commiting them from the working directory to the repository. Its valuable because it allows the programmer to choose the files he/she wants to commit to the repository and provides a holding area from which commits are reversible.

How can you use the staging area to make sure you have one commit per logical change?

You can add files to the staging area after every change and then later on decide on whether the changes amount to logical changes before commiting them to the repository.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful when you want to try out new things in your project that are not really related to the main project or when you want to take your project on a totally different direction than where its currently going. Branches would help in keeping the original  project pure from any of the new changes that are unrelated to it.

How do the diagrams help you visualize the branch structue?

The diagrams help me see the branch structure by showing me each commit connected to its parent all the way to the first commit. Which is how git log also comes up with the branch structure.sss